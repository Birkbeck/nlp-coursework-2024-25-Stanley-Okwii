PART ONE:
(d): This Flesch Kincaid score is not a valid and robust readability score because:-
- The score is influenced by average word and sentence lengths. Shorter sentences with polysyllabic words can skew the results.
- The use of jargon or lists can lead to invalid results in the Flesch Kincaid score, as these factors are not accurately accounted for.


PART TWO:
(f): `super_tokenizer` function and its performance

This function uses a regular expression to filter out special characters in words or tenses, such as punctuation, as these do not help with text prediction. The text is converted to lower case for consistency and then tokenized using `word_tokenize` from NLTK, which splits texts into separate words.

Words longer than two characters and are not part of the stop words are also removed. Morphological affixes are removed from remaining words too, leaving only the stem word. For instance, a word like 'running' becomes 'run' to avoid duplicate variations of the same word.
Unigrams, bigrams and trigrams are computed using NLTK's `ngrams` function. The tokenizer returns a combined list of all unigrams, bigrams, and trigrams.

While it is computationally intensive, this method achieves an F1 score of `0.642` for the SVM classifier, which is considerably better when compared to the RandomForestClassifier's F1 score of `0.486`. 
`TfidfVectorizer` parameters like `sublinear_tf` also improved F1 score. I also noticed an increase in F1 score for both classifiers when using the `super_tokenizer` function.
